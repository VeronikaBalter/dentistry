{"remainingRequest":"/home/nika/Desktop/Dentistry/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/nika/Desktop/Dentistry/src/components/common/Questionnaire.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/nika/Desktop/Dentistry/src/components/common/Questionnaire.vue","mtime":1643171992000},{"path":"/home/nika/Desktop/Dentistry/node_modules/css-loader/dist/cjs.js","mtime":1644149743961},{"path":"/home/nika/Desktop/Dentistry/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1644149745149},{"path":"/home/nika/Desktop/Dentistry/node_modules/postcss-loader/src/index.js","mtime":1644149744341},{"path":"/home/nika/Desktop/Dentistry/node_modules/cache-loader/dist/cjs.js","mtime":1644149743425},{"path":"/home/nika/Desktop/Dentistry/node_modules/vue-loader/lib/index.js","mtime":1644149744681}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5oZWFkZXItcXVlc3Rpb25uYWlyZXsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgZm9udC1zaXplOiAyMHB4OwogIGZvbnQtd2VpZ2h0OiA2MDA7CiAgbWFyZ2luLWJvdHRvbTogMTBweDsKfQo="},{"version":3,"sources":["Questionnaire.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuMA;AACA;AACA;AACA;AACA;AACA","file":"Questionnaire.vue","sourceRoot":"src/components/common","sourcesContent":["<template>\n    <b-modal :title=\"$t('questionnaire')\"\n        centered\n        size=\"xl\"\n        @hide=\"hideEvent\"\n        v-model=\"localModalShow\">\n        <div class=\"header-questionnaire\">{{$t('pastAndAssociatedDiseases')}}</div>\n        <div v-for=\"question in questions\" v-bind:key=\"question.id\">\n          <question-in-the-questionnaire \n            :id=\"question.id\"\n            :textQuestion=\"question.translationId\"\n            :state=\"question.state\"\n            @newValue=\"newValueQuestion\"/>\n        </div>\n        <template #modal-footer=\"{ cancel }\">\n        <b-button variant=\"outline-secondary\"  @click=\"cancel()\"> {{$t('cancel')}}</b-button>\n        <b-button variant=\"primary\" v-on:click=\"ok()\" data-cy=\"save\"> {{$t('save')}}</b-button>\n      </template>\n    </b-modal>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Prop, Vue, Watch } from 'vue-property-decorator';\nimport QuestionInTheQuestionnaire from '../common/QuestionInTheQuestionnaire.vue'\n@Component({\n  components: {\n    QuestionInTheQuestionnaire\n  },\n})\nexport default class Questionnaire extends Vue { \n    @Prop() private modalShow!:boolean;\n    private localModalShow = false;\n    private questions:any = [\n      {\n        id:1,\n        translationId:\"bronchialAsthma\",\n        state:null\n      },\n      {\n        id:2,\n        translationId:\"wereThereSurgeries\",\n        state:null\n      },\n      {\n        id:3,\n        translationId:\"isYourWorkConnectedEarlierOrNowWithHarmfulFactors\",\n        state:null\n      },\n      {\n        id:4,\n        translationId:\"glaucomaIncreasedIntraocularPressure\",\n        state:null\n      },\n      {\n        id:5,\n        translationId:\"headachesIncludingCauseless\",\n        state:null\n      },\n      {\n        id:6,\n        translationId:\"fungalDiseases\",\n        state:null\n      },\n      {\n        id:7,\n        translationId:\"diarrhea\",\n        state:null\n      },\n      {\n        id:8,\n        translationId:\"prolongedUnexplainedFever\",\n        state:null\n      },\n      {\n        id:9,\n        translationId:\"diseaseOfTheGastrointestinalTract\",\n        state:null\n      },\n      {\n        id:10,\n        translationId:\"skinDisease\",\n        state:null\n      },\n      {\n        id:11,\n        translationId:\"bloodDisease\",\n        state:null\n      },\n      {\n        id:12,\n        translationId:\"lungDisease\",\n        state:null\n      },\n      {\n        id:13,\n        translationId:\"liverDisease\",\n        state:null\n      },\n      {\n        id:14,\n        translationId:\"kidneyDisease\",\n        state:null\n      },\n    ];\n    private questionsOldState:any = [\n      {\n        id:1,\n        translationId:\"bronchialAsthma\",\n        state:null\n      },\n      {\n        id:2,\n        translationId:\"wereThereSurgeries\",\n        state:null\n      },\n      {\n        id:3,\n        translationId:\"isYourWorkConnectedEarlierOrNowWithHarmfulFactors\",\n        state:null\n      },\n      {\n        id:4,\n        translationId:\"glaucomaIncreasedIntraocularPressure\",\n        state:null\n      },\n      {\n        id:5,\n        translationId:\"headachesIncludingCauseless\",\n        state:null\n      },\n      {\n        id:6,\n        translationId:\"fungalDiseases\",\n        state:null\n      },\n      {\n        id:7,\n        translationId:\"diarrhea\",\n        state:null\n      },\n      {\n        id:8,\n        translationId:\"prolongedUnexplainedFever\",\n        state:null\n      },\n      {\n        id:9,\n        translationId:\"diseaseOfTheGastrointestinalTract\",\n        state:null\n      },\n      {\n        id:10,\n        translationId:\"skinDisease\",\n        state:null\n      },\n      {\n        id:11,\n        translationId:\"bloodDisease\",\n        state:null\n      },\n      {\n        id:12,\n        translationId:\"lungDisease\",\n        state:null\n      },\n      {\n        id:13,\n        translationId:\"liverDisease\",\n        state:null\n      },\n      {\n        id:14,\n        translationId:\"kidneyDisease\",\n        state:null\n      },\n    ];\n    @Watch('modalShow')\n    private modalShowWatch(value:boolean){\n      this.localModalShow = this.modalShow;\n    }\n    // private created() {\n    //   this.questions.forEach((el:any) => this.questionsOldState.push(el));\n    // }\n\n    private newValueQuestion(item:any){\n      this.questions[item.id-1].state = item.value\n    }\n    private ok(){\n      this.questionsOldState = this.questions;\n      this.$emit('changesSaved',this.questions);\n    }\n    private hideEvent(){\n      this.questions = this.questionsOldState;\n      this.$emit('changesModalShow');\n    }   \n}\n</script>\n<style>\n  \n  .header-questionnaire{\n    text-align: center;\n    font-size: 20px;\n    font-weight: 600;\n    margin-bottom: 10px;\n  }\n</style>"]}]}